<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Simple Blog - Home</title>
</head>
<body>
<h1>Simple Blog</h1>

<div class="search-container">
  <input type="text" id="searchBox" placeholder="Search posts..." onkeyup="searchPosts()">
  
</div>


<div id="posts"></div>

<button onclick="showNewPostForm()">New Post</button>
<button onclick="signOut()">Sign Out</button>

<div id="newPostForm" style="display: none;">
 <h2>New Post</h2>
 <form id="postForm">
    <label for="postTitle">Title:</label><br>
    <input type="text" id="postTitle" name="postTitle"><br>
    <label for="postBody">Body:</label><br>
    <textarea id="postBody" name="postBody"></textarea><br>
    <button type="submit">Create Post</button>
 </form>
</div>


<div id="editPostForm" style="display: none;">
  <h2>Edit Post</h2>
  <form id="editForm">
     <input type="hidden" id="editPostId" name="postId">
     <label for="editPostTitle">Title:</label><br>
     <input type="text" id="editPostTitle" name="postTitle"><br>
     <label for="editPostBody">Body:</label><br>
     <textarea id="editPostBody" name="postBody"></textarea><br>
     <button type="submit">Update Post</button>
  </form>
 </div>

<script>
 const sessionId = '<%= sessionId %>';
 console.log('Session ID:', sessionId);
 function createPost(title, body) {
    fetch('/posts', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ title, body }),
    })
    .then(response => response.json())
    .then(data => {
      console.log('Post created:', data);
      renderPosts();
    })
    .catch(error => console.error('Error:', error));
 }


 function signOut() {
    fetch('/signout', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
    })
    .then(response => {
      if (response.ok) {
        window.location.href = '/'; // Redirect to the index page
      } else {
        console.error('Sign out failed');
      }
    })
    .catch(error => console.error('Error:', error));
 }

 function renderPosts() {
    fetch('/posts')
      .then(response => response.json())
      .then(posts => {
        const postsContainer = document.getElementById("posts");
        postsContainer.innerHTML = "";
        posts.forEach(post => {
          const postElement = document.createElement("div");
          postElement.innerHTML = `
            <h2>${post.title}</h2>
            <p>${post.content}</p>
            <button onclick="editPost(${post.id})">Edit</button>
            <button onclick="deletePost(${post.id})">Delete</button>
          `;
          postsContainer.appendChild(postElement);
        });
      })
      .catch(error => console.error('Error:', error));
}


function editPost(postId) {
    console.log('Editing post with ID:', postId);

    // Get the userId from the server-side session
    fetch('/user')
      .then(response => response.json())
      .then(user => {
        const userId = user.id;
        console.log('User ID:', userId);

        fetch(`/posts/${postId}?userId=${userId}`)
          .then(response => {
            console.log('Response status:', response.status);

            if (response.ok) {
              return response.json();
            } else if (response.status === 403) {
              throw new Error('Unable to edit posts that were not made by you');
            } else {
              throw new Error('An error occurred while retrieving the post');
            }
          })
          .then(post => {
            if (post) {
              document.getElementById('editPostId').value = post.id;
              document.getElementById('editPostTitle').value = post.title;
              document.getElementById('editPostBody').value = post.content;
              document.getElementById('editPostForm').style.display = 'block';
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert(error.message);
          });
      })
      .catch(error => {
        console.error('Error retrieving user:', error);
        alert('An error occurred while retrieving the user.');
      });
}






function updatePost(postId, title, body) {
    fetch(`/posts/${postId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ title, body }),
    })
    .then(response => response.json())
    .then(data => {
      console.log('Post updated:', data);
      document.getElementById('editPostForm').style.display = 'none';
      renderPosts();
    })
    .catch(error => console.error('Error:', error));
}


 function deletePost(postId) {
    fetch(`/posts/${postId}`, {
        method: 'DELETE',
    })
    .then(response => {
        if (response.ok) {
            renderPosts();
        } else {
            console.error('Delete post failed');
        }
    })
    .catch(error => console.error('Error:', error));
}

 function showNewPostForm() {
    document.getElementById("newPostForm").style.display = "block";
 }

 
 
 document.getElementById("postForm").addEventListener("submit", function(event) {
    event.preventDefault();
    const title = document.getElementById("postTitle").value;
    const body = document.getElementById("postBody").value;
    if (title.trim() && body.trim()) {
      createPost(title, body);
      document.getElementById("postTitle").value = "";
      document.getElementById("postBody").value = "";
      document.getElementById("newPostForm").style.display = "none";
    } else {
      alert("Please enter both title and body.");
    }
 });

 document.getElementById('editForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const postId = document.getElementById('editPostId').value;
    const title = document.getElementById('editPostTitle').value;
    const body = document.getElementById('editPostBody').value;
    updatePost(postId, title, body);
});

 renderPosts();

 // Seach function
 function searchPosts() {
    const searchTerm = document.getElementById('searchBox').value;
    fetch(`/posts?searchTerm=${encodeURIComponent(searchTerm)}`)
       .then(response => response.json())
       .then(posts => {
            renderPosts(posts);
        })
       .catch(error => console.error('Error:', error));
}


function renderPosts(posts = null) {
    if (posts) {
        displayPosts(posts);
    } else {
        fetch('/posts')
            .then(response => response.json())
            .then(posts => displayPosts(posts))
            .catch(error => console.error('Error:', error));
    }
}

function displayPosts(posts) {
    const postsContainer = document.getElementById("posts");
    postsContainer.innerHTML = ""; // Clear previous posts
    posts.forEach(post => {
        const postElement = document.createElement("div");
        postElement.innerHTML = `
            <h2>${post.title}</h2>
            <p>${post.content}</p>
            <p>By: ${post.username}</p>
            <p>${new Date(post.created_at).toLocaleDateString()} ${new Date(post.created_at).toLocaleTimeString()}</p> <!-- Display timestamp -->
            <button onclick="editPost(${post.id})">Edit</button>
            <button onclick="deletePost(${post.id})">Delete</button>
        `;
        postsContainer.appendChild(postElement);
    });
}


document.addEventListener('DOMContentLoaded', function() {
    renderPosts(); // Call renderPosts initially when the document is ready
});

document.getElementById("postForm").addEventListener("submit", function(event) {
    event.preventDefault();
    const title = document.getElementById("postTitle").value;
    const body = document.getElementById("postBody").value;
    if (title.trim() && body.trim()) {
        createPost(title, body);
        document.getElementById("postTitle").value = "";
        document.getElementById("postBody").value = "";
        document.getElementById("newPostForm").style.display = "none";
    } else {
        alert("Please enter both title and body.");
    }
});

document.getElementById('editForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const postId = document.getElementById('editPostId').value;
    const title = document.getElementById('editPostTitle').value;
    const body = document.getElementById('editPostBody').value;
    updatePost(postId, title, body);
});

</script>

</body>
</html>
