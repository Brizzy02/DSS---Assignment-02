<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple Blog - Registration</title>
    <link rel="stylesheet" href="../Styles/index.css">
</head>
<body>
    <header>
        <h1 class="heading">Simple Blog</h1>
        <h3 class="title">Login & Registration Form</h3>
    </header>
    <div class="main-container">
        <div class="container">
            <div class="btn-group">
                <a href="/index" class="signup">Login</a>
                <a href="/signup" class="signup">Signup</a>
            </div>
            <div class="form-section">
                <div class="login-box">
                    <form id="registrationForm" action="/signup" method="post">
                        <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                        <input type="text" id="username" placeholder="username" name="username" required>
                        <input type="email" id="email ele" placeholder="youremail@email.com" name="email" required>
                        <input type="password" id="password ele" placeholder="password" name="password" required>
                        <button type="submit" id="clkbtn">Sign Up</button>
                    </form>
                    <!-- Placeholder for displaying the secret key -->
                    <div id="secretKeyDisplay" style="display: none;">
                        <p>Your secret key is: <span id="secretKey"></span></p>
                        <p>Please add this key to your Google Authenticator app.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>   

<script>
function displayMessage(message, type) {
    const messageElement = document.getElementById('message');
    if (!messageElement) {
        const newMessage = document.createElement('div');
        newMessage.id = 'message';
        document.querySelector('.container').appendChild(newMessage);
    }
    const messageDiv = document.getElementById('message');
    messageDiv.textContent = message;
    messageDiv.className = type; // Apply CSS styles based on 'success' or 'error'
}

document.getElementById('registrationForm').addEventListener('submit', function(event) {
    event.preventDefault();
    const formData = new FormData(event.target);
    const data = Object.fromEntries(formData.entries());

    console.log('Form data:', data);

    const urlEncodedData = new URLSearchParams(data).toString();

    fetch('/signup', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: urlEncodedData,
    })
.then(response => response.json())
.then(data => {
        if (data.message) {
            console.log('Registration successful:', data);
            displayMessage('Registration successful!', 'success');
            document.getElementById('registrationForm').reset(); // Reset form fields
            document.getElementById('secretKey').textContent = data.secretKey;
            document.getElementById('secretKeyDisplay').style.display = 'block';
        } else {
            console.log('Registration failed:', data.error);
            throw new Error('Username or Email already exists');
        }
    })
.catch((error) => {
        console.error('Error:', error);
        displayMessage('Registration failed: ' + error.message, 'error');
    });
});
</script>

</body>
</html>
